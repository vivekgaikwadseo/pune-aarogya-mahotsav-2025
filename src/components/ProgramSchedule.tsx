import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Badge } from "@/components/ui/badge";
import EventDetailsModal from "@/components/EventDetailsModal";
import PanelDiscussion1Modal from "@/components/PanelDiscussion1Modal";
import AwardsModal from "@/components/AwardsModal";
import SpecialFelicitationModal from "@/components/SpecialFelicitationModal";
import BookLaunchModal from "@/components/BookLaunchModal";
import ConcludingCeremonyModal from "@/components/ConcludingCeremonyModal";
import PanelDiscussion2Modal from "@/components/PanelDiscussion2Modal";
import LectureSessionModal from "@/components/LectureSessionModal";
import eventHealthCamp from "@/assets/event-health-camp.jpg";
import eventInauguration from "@/assets/event-inauguration.jpg";
import eventPanelDiscussion from "@/assets/event-panel-discussion.jpg";
import eventAwardCeremony from "@/assets/event-award-ceremony.jpg";
import eventCulturalProgram from "@/assets/event-cultural-program.jpg";
import eventLecture from "@/assets/event-lecture.jpg";
import eventFelicitation from "@/assets/event-felicitation.jpg";
import eventBookLaunch from "@/assets/event-book-launch.jpg";
import eventTheatre from "@/assets/event-theatre.jpg";
import eventMusicNight from "@/assets/event-music-night.jpg";
import eventStressFree from "@/assets/event-stress-free-life.jpg";

interface EventCardProps {
  image: string;
  title: string;
  tagText: string;
  tagColor: string;
  time: string;
  description: string;
  footer: string;
  showDetailsLink?: boolean;
  onDetailsClick?: () => void;
}

const EventCard = ({ image, title, tagText, tagColor, time, description, footer, showDetailsLink, onDetailsClick }: EventCardProps) => {
  return (
    <div className="group">
      {/* Image Container */}
      <div className="rounded-lg overflow-hidden">
        <img 
          src={image} 
          alt={title}
          className="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
        />
      </div>
      
      {/* Content Box - overlaps image and narrower */}
      <div className="relative -mt-8 mx-4 bg-white rounded-lg shadow-lg border-t-4 border-t-bright-pink p-4 space-y-3">
        
        {/* Tag Badge */}
        <div>
          <Badge 
            className="bg-bright-pink text-white font-medium hover:bg-bright-pink"
          >
            {tagText}
          </Badge>
        </div>
        
        {/* Title */}
        <h3 className="text-lg font-bold text-hero-navy leading-tight">
          {title}
        </h3>
        
        {/* Time */}
        <p className="text-sm text-hero-grey font-medium">
          {time}
        </p>
        
        {/* Description */}
        <p className="text-sm text-muted-foreground leading-relaxed">
          {description}
        </p>
        
        {/* Footer */}
        <p className="text-xs text-hero-grey leading-relaxed pt-2 border-t border-border">
          {footer}
        </p>
        
        {/* Details Link */}
        {showDetailsLink && (
          <button
            onClick={onDetailsClick}
            className="inline-block text-sm font-medium text-hero-navy hover:text-bright-pink transition-colors cursor-pointer"
          >
            рдЕрдзрд┐рдХ рдЬрд╛рдгреВрди рдШреНрдпрд╛ ┬╗
          </button>
        )}
      </div>
    </div>
  );
};

const ProgramSchedule = () => {
  const navigate = useNavigate();
  const [showInaugurationModal, setShowInaugurationModal] = useState(false);
  const [showPanelDiscussion1Modal, setShowPanelDiscussion1Modal] = useState(false);
  const [showAwardsModal, setShowAwardsModal] = useState(false);
  const [showSpecialFelicitationModal, setShowSpecialFelicitationModal] = useState(false);
  const [showBookLaunchModal, setShowBookLaunchModal] = useState(false);
  const [showConcludingCeremonyModal, setShowConcludingCeremonyModal] = useState(false);
  const [showPanelDiscussion2Modal, setShowPanelDiscussion2Modal] = useState(false);
  const [showLectureModal, setShowLectureModal] = useState(false);

  const events = [
    {
      image: eventHealthCamp,
      title: "рднрд╡реНрдп рдЖрд░реЛрдЧреНрдп рд╢рд┐рдмреАрд░",
      tagText: "рдЖрд░реЛрдЧреНрдп рд╢рд┐рдмрд┐рд░",
      tagColor: "#FF0080",
      time: "ЁЯХЩ рд╕рдХрд╛рд│реА реп:режреж рддреЗ рд╕рд╛рдпрдВ. рен:режреж рдкрд░реНрдпрдВрдд",
      description: "рд╡рд┐рд╡рд┐рдз рдЖрдЬрд╛рд░рд╛рдВрд╡рд░ рддрдЬреНрдЮ рдбреЙрдХреНрдЯрд░рд╛рдВрдХрдбреВрди рдореЛрдлрдд рддрдкрд╛рд╕рдгреА, рдФрд╖рдзреЛрдкрдЪрд╛рд░ рдЖрдгрд┐ рдЖрд╡рд╢реНрдпрдХ рд╢рд╕реНрддреНрд░рдХреНрд░рд┐рдпрд╛.",
      footer: "тЬи рдореБрдЦреНрдп рдЙрдкрд╕реНрдерд┐рддреА: рдЖрд░реЛрдЧреНрдп рдХреНрд╖реЗрддреНрд░рд╛рддреАрд▓ рдирд╛рдорд╡рдВрдд рдбреЙрдХреНрдЯрд░ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рд╕рдВрдкреВрд░реНрдг рджрд┐рд╡рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventInauguration,
      title: "рдЙрджреНрдШрд╛рдЯрди рд╕реЛрд╣рд│рд╛",
      tagText: "рдореБрдЦреНрдп рдХрд╛рд░реНрдпрдХреНрд░рдо",
      tagColor: "#000F93",
      time: "ЁЯХЩ рд╕рдХрд╛рд│реА резреж:режреж рд╡рд╛",
      description: "рдорд╣рд╛рдЖрд░реЛрдЧреНрдп рд╢рд┐рдмреАрд░ рдЖрдгрд┐ рдореБрдЦреНрдпрдордВрддреНрд░реА рдлрд┐рд░рддрд╛ рджрд╡рд╛рдЦрд╛рдирд╛ рдпрд╛рдВрдЪреЗ рднрд╡реНрдп рд▓реЛрдХрд╛рд░реНрдкрдг.",
      footer: "ЁЯОд рдЙрджреНрдШрд╛рдЯрдХ: рдорд╛. рд╢реНрд░реА. рджреЗрд╡реЗрдВрджреНрд░ рдлрдбрдгрд╡реАрд╕ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рез рддрд╛рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventPanelDiscussion,
      title: "рдкрд░рд┐рд╕рдВрд╡рд╛рдж рез: рдЕрдВрдорд▓реАрдкрджрд╛рд░реНрде рдореБрдХреНрдд рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░",
      tagText: "рдкрд░рд┐рд╕рдВрд╡рд╛рдж",
      tagColor: "#000F93",
      time: "ЁЯХЩ рд╕рдХрд╛рд│реА резрез:рейреж рд╡рд╛",
      description: "'рдЕрдВрдорд▓реАрдкрджрд╛рд░реНрде рдореБрдХреНрдд рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░ рдХрд░реБрдпрд╛!' рдпрд╛ рдорд╣рддреНрддреНрд╡рд╛рдЪреНрдпрд╛ рд╡рд┐рд╖рдпрд╛рд╡рд░ рддрдЬреНрдЮрд╛рдВрдЪреЗ рдорд╛рд░реНрдЧрджрд░реНрд╢рди.",
      footer: "ЁЯОд рд╡рдХреНрддреЗ: рдорд╛. рдЕрдорд┐рддреЗрд╢ рдХреБрдорд╛рд░, рдорд╛. рдкреНрд░рд╡рд┐рдгрдХреБрдорд╛рд░ рдкрд╛рдЯреАрд▓ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рез рддрд╛рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventAwardCeremony,
      title: "рдЖрд░реЛрдЧреНрдпрднреВрд╖рдг рдкреБрд░рд╕реНрдХрд╛рд░ рдЖрдгрд┐ рд╕реНрдорд░рдгрд┐рдХрд╛ рдкреНрд░рдХрд╛рд╢рди",
      tagText: "рдкреБрд░рд╕реНрдХрд╛рд░ рд╕реЛрд╣рд│рд╛",
      tagColor: "#FF0080",
      time: "ЁЯХЩ рджреБрдкрд╛рд░реА резреи:рейреж рд╡рд╛",
      description: "'рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░ рдЖрд░реЛрдЧреНрдпрднреВрд╖рдг рдкреБрд░рд╕реНрдХрд╛рд░ реирежреирел' рд╡рд┐рддрд░рдг рдЖрдгрд┐ 'рд╕реНрд╡рд╛рд╕реНрде рд╕рдВрджреЗрд╢ реирежреирел' рд╕реНрдорд░рдгрд┐рдХрд╛ рдкреНрд░рдХрд╛рд╢рди.",
      footer: "ЁЯОд рд╣рд╕реНрддреЗ: рдорд╛. рдирд╛. рд╢реНрд░реА. рдЪрдВрджреНрд░рдХрд╛рдВрддрджрд╛рджрд╛ рдкрд╛рдЯреАрд▓ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рджреАрдб рддрд╛рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventLecture,
      title: "рд╡рд┐рд╢реЗрд╖ рд╡реНрдпрд╛рдЦреНрдпрд╛рди рд╕рддреНрд░",
      tagText: "рд╡реНрдпрд╛рдЦреНрдпрд╛рди",
      tagColor: "#000F93",
      time: "ЁЯХЩ рджреБрдкрд╛рд░реА рей:рейреж рд╡рд╛",
      description: "рдбреЙ. рдЬрдЧрдиреНрдирд╛рде рджреАрдХреНрд╖рд┐рдд, рдбреЙ. рдкреНрд░рдореЛрдж рдЬреЛрдЧ рдЖрдгрд┐ рдбреЙ. рдкреНрд░рджрд┐рдк рдЖрд╡рдЯреЗ рдпрд╛рдВрдЪреНрдпрд╛рдХрдбреВрди рдЖрд░реЛрдЧреНрдпрд╡рд┐рд╖рдпрдХ рдорд╛рд░реНрдЧрджрд░реНрд╢рди.",
      footer: "ЁЯОд рд╡рдХреНрддреЗ: рдкреНрд░рд╕рд┐рджреНрдз рдЖрд░реЛрдЧреНрдп рддрдЬреНрдЮ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рейреж-рейреж рдорд┐рдирд┐рдЯреЗ рдкреНрд░рддреНрдпреЗрдХреА | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventFelicitation,
      title: "рд╡рд┐рд╢реЗрд╖ рд╕рдиреНрдорд╛рди рд╕реЛрд╣рд│рд╛",
      tagText: "рд╕рддреНрдХрд╛рд░",
      tagColor: "#FF0080",
      time: "ЁЯХЩ рджреБрдкрд╛рд░реА рек:режреж рд╡рд╛",
      description: "рдЖрд░реЛрдЧреНрдп рдХреНрд╖реЗрддреНрд░рд╛рдд рдЙрд▓реНрд▓реЗрдЦрдиреАрдп рдХрд╛рд░реНрдп рдХрд░рдгрд╛рд▒реНрдпрд╛ рдорд╛рдиреНрдпрд╡рд░рд╛рдВрдЪрд╛ рд╡рд┐рд╢реЗрд╖ рд╕рдиреНрдорд╛рди.",
      footer: "ЁЯОд рд╣рд╕реНрддреЗ: рдорд╛. рдирд╛. рдорд╛рдзреБрд░реАрддрд╛рдИ рдорд┐рд╕рд╛рд│ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рейреж рдорд┐рдирд┐рдЯреЗ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventBookLaunch,
      title: "рдкреБрд╕реНрддрдХ рдкреНрд░рдХрд╛рд╢рди рд╕рдорд╛рд░рдВрдн",
      tagText: "рд╕рд╛рд╣рд┐рддреНрдп",
      tagColor: "#000F93",
      time: "ЁЯХЩ рджреБрдкрд╛рд░реА рек:рейреж рд╡рд╛",
      description: "рдЙрдореЗрд╢ рдЪрд╡реНрд╣рд╛рдг рд▓рд┐рдЦрд┐рдд 'рдЖрд░реЛрдЧреНрдп рд╕рдореГрджреНрдз рдХрд░реВрдпрд╛..!' рдпрд╛ рдкреБрд╕реНрддрдХрд╛рдЪреЗ рдорд╛рдиреНрдпрд╡рд░рд╛рдВрдЪреНрдпрд╛ рд╣рд╕реНрддреЗ рдкреНрд░рдХрд╛рд╢рди.",
      footer: "ЁЯОд рд▓реЗрдЦрдХ: рд╢реНрд░реА. рдЙрдореЗрд╢ рдЪрд╡реНрд╣рд╛рдг | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рез рддрд╛рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventPanelDiscussion,
      title: "рдкрд░рд┐рд╕рдВрд╡рд╛рдж реи: рдЖрд░реЛрдЧреНрдп рд╡реНрдпрд╡рд╕реНрдереЗрдкреБрдвреАрд▓ рдЖрд╡реНрд╣рд╛рдиреЗ",
      tagText: "рдкрд░рд┐рд╕рдВрд╡рд╛рдж",
      tagColor: "#000F93",
      time: "ЁЯХЩ рд╕рд╛рдпрдВ. рел:рейреж рд╡рд╛",
      description: "'рд╢рд╣рд░реА рд╡ рдЧреНрд░рд╛рдореАрдг рдЖрд░реЛрдЧреНрдп рд╡реНрдпрд╡рд╕реНрдереЗрдкреБрдвреАрд▓ рдЖрд╡реНрд╣рд╛рдиреЗ' рдпрд╛ рд╡рд┐рд╖рдпрд╛рд╡рд░ рддрдЬреНрдЮрд╛рдВрдЪреА рдЪрд░реНрдЪрд╛.",
      footer: "ЁЯОд рдЕрдзреНрдпрдХреНрд╖: рдбреЙ. рдХреБрдорд╛рд░ рд╕рдкреНрддрд░реНрд╖реА | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рез рддрд╛рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventStressFree,
      title: "рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░реНрдпрдХреНрд░рдо : рддрдгрд╛рд╡ рдореБрдХреНрдд рдЬреАрд╡рди",
      tagText: "рдЖрд░реЛрдЧреНрдп рдЪрд░реНрдЪрд╛",
      tagColor: "#000F93",
      time: "ЁЯХЩ рд╕рд╛рдпрдВ. рен:рейреж рд╡рд╛",
      description: "рдЬреАрд╡рдирд╛рддреАрд▓ рддрдгрд╛рд╡ рдХрдореА рдХрд░реВрди рдЖрдирдВрджреА рдЖрдгрд┐ рдирд┐рд░реЛрдЧреА рдХрд╕реЗ рд░рд╣рд╛рд╡реЗ, рдпрд╛рд╡рд░ рддрдЬреНрдЮрд╛рдВрдЪреЗ рдорд╛рд░реНрдЧрджрд░реНрд╢рди.",
      footer: "ЁЯОд рд╕рд╛рджрд░рдХрд░реНрддреЗ: рдбреЙ. рд╕рдВрдЬреАрд╡ рдХреБрдорд╛рд░ рдкрд╛рдЯреАрд▓ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рез рддрд╛рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    },
    {
      image: eventMusicNight,
      title: "рд╕рдорд╛рд░реЛрдк",
      tagText: "рд╕рдорд╛рд░реЛрдк",
      tagColor: "#FF0080",
      time: "ЁЯХЩ рд░рд╛рддреНрд░реА рео:режреж рд╡рд╛",
      description: "рд╕рдВрдореЗрд▓рдирд╛рдЪрд╛ рдЖрдврд╛рд╡рд╛ рдЖрдгрд┐ рдкреБрдвреАрд▓ рд╡рд╛рдЯрдЪрд╛рд▓реАрд╡рд░ рдЪрд░реНрдЪрд╛ рдпрд╛рд╕рд╣ рдорд╣реЛрддреНрд╕рд╡рд╛рдЪреА рд╕рд╛рдВрдЧрддрд╛.",
      footer: "ЁЯОд рдЕрдзреНрдпрдХреНрд╖: рдбреЙ. рд╕рдВрдЬрдп рдУрдХ | тП│ рдХрд╛рд▓рд╛рд╡рдзреА: рдЕрдВрджрд╛рдЬреЗ рез рддрд╛рд╕ | ЁЯОЯя╕П рдкреНрд░рд╡реЗрд╢: рд╡рд┐рдирд╛рдореВрд▓реНрдп"
    }
  ];

  return (
    <section className="py-16 md:py-24 bg-white">
      <div className="container mx-auto px-4">
        {/* Section Header */}
        <div className="text-center mb-12 space-y-3">
          <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold text-hero-navy">
            рдХрд╛рд░реНрдпрдХреНрд░рдорд╛рдЪреЗ рд╡реЗрд│рд╛рдкрддреНрд░рдХ
          </h2>
          <p className="text-base md:text-lg text-hero-grey max-w-3xl mx-auto">
            рд╕рд░реНрд╡ рдХрд╛рд░реНрдпрдХреНрд░рдо рдПрдХрд╛рдЪ рдард┐рдХрд╛рдгреА рдЖрдпреЛрдЬрд┐рдд рдХреЗрд▓реЗ рдЖрд╣реЗрдд:{" "}
            <span className="font-bold text-hero-navy">рдмрд╛рд▓рдЧрдВрдзрд░реНрд╡ рд░рдВрдЧрдордВрджрд┐рд░, рдкреБрдгреЗ</span>
          </p>
        </div>

        {/* Event Cards Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10">
          {events.map((event, index) => (
            <EventCard 
              key={index} 
              {...event} 
              showDetailsLink={
                event.title === "рднрд╡реНрдп рдЖрд░реЛрдЧреНрдп рд╢рд┐рдмреАрд░" ||
                event.title === "рдЙрджреНрдШрд╛рдЯрди рд╕реЛрд╣рд│рд╛" || 
                event.title === "рдкрд░рд┐рд╕рдВрд╡рд╛рдж рез: рдЕрдВрдорд▓реАрдкрджрд╛рд░реНрде рдореБрдХреНрдд рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░" ||
                event.title === "рдЖрд░реЛрдЧреНрдпрднреВрд╖рдг рдкреБрд░рд╕реНрдХрд╛рд░ рдЖрдгрд┐ рд╕реНрдорд░рдгрд┐рдХрд╛ рдкреНрд░рдХрд╛рд╢рди" ||
                event.title === "рд╡рд┐рд╢реЗрд╖ рд╕рдиреНрдорд╛рди рд╕реЛрд╣рд│рд╛" ||
                event.title === "рдкреБрд╕реНрддрдХ рдкреНрд░рдХрд╛рд╢рди рд╕рдорд╛рд░рдВрдн" ||
                event.title === "рдкрд░рд┐рд╕рдВрд╡рд╛рдж реи: рдЖрд░реЛрдЧреНрдп рд╡реНрдпрд╡рд╕реНрдереЗрдкреБрдвреАрд▓ рдЖрд╡реНрд╣рд╛рдиреЗ" ||
                event.title === "рд╡рд┐рд╢реЗрд╖ рд╡реНрдпрд╛рдЦреНрдпрд╛рди рд╕рддреНрд░" ||
                event.title === "рд╕рдорд╛рд░реЛрдк"
              }
              onDetailsClick={() => {
                if (event.title === "рднрд╡реНрдп рдЖрд░реЛрдЧреНрдп рд╢рд┐рдмреАрд░") {
                  navigate("/health-camp");
                } else if (event.title === "рдЙрджреНрдШрд╛рдЯрди рд╕реЛрд╣рд│рд╛") {
                  setShowInaugurationModal(true);
                } else if (event.title === "рдкрд░рд┐рд╕рдВрд╡рд╛рдж рез: рдЕрдВрдорд▓реАрдкрджрд╛рд░реНрде рдореБрдХреНрдд рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░") {
                  setShowPanelDiscussion1Modal(true);
                } else if (event.title === "рдЖрд░реЛрдЧреНрдпрднреВрд╖рдг рдкреБрд░рд╕реНрдХрд╛рд░ рдЖрдгрд┐ рд╕реНрдорд░рдгрд┐рдХрд╛ рдкреНрд░рдХрд╛рд╢рди") {
                  setShowAwardsModal(true);
                } else if (event.title === "рд╡рд┐рд╢реЗрд╖ рд╕рдиреНрдорд╛рди рд╕реЛрд╣рд│рд╛") {
                  setShowSpecialFelicitationModal(true);
                } else if (event.title === "рдкреБрд╕реНрддрдХ рдкреНрд░рдХрд╛рд╢рди рд╕рдорд╛рд░рдВрдн") {
                  setShowBookLaunchModal(true);
                } else if (event.title === "рдкрд░рд┐рд╕рдВрд╡рд╛рдж реи: рдЖрд░реЛрдЧреНрдп рд╡реНрдпрд╡рд╕реНрдереЗрдкреБрдвреАрд▓ рдЖрд╡реНрд╣рд╛рдиреЗ") {
                  setShowPanelDiscussion2Modal(true);
                } else if (event.title === "рд╡рд┐рд╢реЗрд╖ рд╡реНрдпрд╛рдЦреНрдпрд╛рди рд╕рддреНрд░") {
                  setShowLectureModal(true);
                } else if (event.title === "рд╕рдорд╛рд░реЛрдк") {
                  setShowConcludingCeremonyModal(true);
                }
              }}
            />
          ))}
        </div>
      </div>

      <EventDetailsModal 
        open={showInaugurationModal}
        onOpenChange={setShowInaugurationModal}
      />
      
      <PanelDiscussion1Modal 
        open={showPanelDiscussion1Modal}
        onOpenChange={setShowPanelDiscussion1Modal}
      />

      <AwardsModal 
        open={showAwardsModal} 
        onOpenChange={setShowAwardsModal} 
      />

      <SpecialFelicitationModal
        open={showSpecialFelicitationModal}
        onOpenChange={setShowSpecialFelicitationModal}
      />
      <BookLaunchModal
        open={showBookLaunchModal}
        onOpenChange={setShowBookLaunchModal}
      />

      <ConcludingCeremonyModal
        open={showConcludingCeremonyModal}
        onOpenChange={setShowConcludingCeremonyModal}
      />

      <PanelDiscussion2Modal
        open={showPanelDiscussion2Modal}
        onOpenChange={setShowPanelDiscussion2Modal}
      />

      <LectureSessionModal
        open={showLectureModal}
        onOpenChange={setShowLectureModal}
      />
    </section>
  );
};

export default ProgramSchedule;
